---
title: "PhyloGuide"
author: 
  - name: Vinny Chloros
    email: vinny.chloros@snhu.edu
    affiliations: 
      - name: Southern New Hampshire University
date: 3/24/2025
date-modified: today
date-format: long
format: html
editor: visual
code-fold: show
---

```{r setup}
library(BiocManager)
library(ape)
library(phangorn)
library(ggtree)
#library(tictoc) #optional

set.seed(17032025)
```

## Introduction

This is a simple guide to created a phylogenetic tree in R using pre-aligned DNA sequences. The data used and the models and features chosen are based on Agnarsson et al., 2010.

## Import Data

```{r}
felidae <- read.phyDat("https://raw.githubusercontent.com/vchloros/PhyloFriends/refs/heads/main/FelidaeAlignedNames.fas?token=GHSAT0AAAAAAC5MALVOKEXTX3LH72MFWTGGZ7BRAWA", format = "fasta")
```

`read.phyDat()` is a function used to read in phylogenetic data in a variety of formats. For this exercise, we'll be using a fasta file. We can save this data as an object called "felidae" based on the family we're examining.

## Run Model

```{r}
#| message: false
#estimated time: 11 secs

#tictoc::tic()
fitGTR <- pml_bb(felidae, model="GTR+G(4)+I", rearrangement = "NNI", method = "ultrametric")
#tictoc::toc()
```

The next function `pml_bb()`is used to construct the tree. We can specify the model that we want: a general relative time model (GTR) that is gamma distributed with 4 categories(G(4)) and invariable sites (I). We'll use a nearest-neighbor interchange rearrangment (NNI) to alter the shape of our tree. Lastly, we'll specify an ultrametric method of building the tree so we can locate a definite root.

We'll save this output into another object: fitGTR.

The function `tic()` and `toc()` here are part of the tictoc package which lets you time how long operations take. If you don't want to use them, you don't have to!

### Bootstrapping

Next, we'll perform a bootstrapping analysis: this allows our software to generate many trees at once and compare them to each other. From this, we can find out how often each branch appears in our initial tree. High percentages mean many trees agree with a node or taxa's placement, while low percentages indicate disagreement between tree versions.

```{r}
#estimated time: ~10 minutes

#tictoc::tic()
bs <- bootstrap.pml(fitGTR, bs=100, optNni=TRUE,
    control = pml.control(trace = 0), jumble = TRUE)
#tictoc::toc()
```

## Plotting Trees

There are several ways to plot out a phylogenetic tree once we have our data. Phangorn has one built in:

```{r}
plotBS(midpoint(fitGTR$tree), bs, p = 50, type="p", main="Standard bootstrap")

tree_stdbs <- plotBS(fitGTR$tree, bs, type = "p")
```

We'll store this tree as an object so that we can use other functions to illustrate it.

You can use ape, which depends on phangorn:

```{r}
plot.phylo(tree_stdbs, use.edge.length = FALSE)
```

Or you can use ggtree, a package made just for visualizing phylogenetic trees!

```{r}
ggtree(tree_stdbs, branch.length="none") +
  geom_tiplab(size = 3, color = "purple") +
  xlim(c(0, 50))
```

